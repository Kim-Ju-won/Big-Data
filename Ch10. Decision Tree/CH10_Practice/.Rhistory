chartoSet()
fonts()
fonts();
localeToCharset()
install.packages("C50")
pclass <- c(1,1,1,1,2,
2,2,2,2,2)
gender <- c("M","M","M","F","M",
"M","M","M","F","F")
train_data <- data.frame("좌석등급"=pclass,
"성별" =gender,
"생존여부"=survived
stringAsFactors = TRUE)
train_data <- data.frame("좌석등급"=pclass,
"성별" =gender,
"생존여부"=survived,
stringAsFactors = TRUE)
survived <- c("Y", "Y", "Y", "Y", "N",
"N", "N", "Y", "Y", "Y")
train_data <- data.frame("좌석등급"=pclass,
"성별" =gender,
"생존여부"=survived,
stringAsFactors = TRUE)
str(train_data)
train_data
str(train_data)
str(survived)
train_data <- NULL
train_data <- data.frame("좌석등급"=pclass,
"성별" =gender,
"생존여부"=survived,
stringsAsFactors = TRUE)
train_data
str(train_data)
pclass <- c(1,2,2)
gender <- c("F", "F", "M")
test_data <- data.frame("좌석등급"= pclass,
"성별" = gender,
stringsAsFactors = TRUE)
test_data
model <- C5.0(생존 여부~., data = train_data)
model <- C5.0(생존 여부 ~., data = train_data)
model <- C5.0(생존 여부 ~ ., data = train_data)
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
model <- C5.0(생존 여부 ~ ., data = train_data)
library(C50)
model <- C5.0(생존 여부 ~ ., data = train_data)
model <- C5.0( 생존 여부 ~ ., data = train_data)
model <- C5.0( 생존여부 ~ ., data = train_data)
summary(model)
plot(model)
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
install.packages("extrafont")
library(extrafont)
font_import()
plot(model)
par(family="NanumGothic")
theme_set(theme_gray(base_family='NanumGothic'))
par(family="AppleGothic")
summary(model)
dev.off
par(family="AppleGothic")
plot(model)
sessionInfo()
vertex.label.family ="AppleGothic"
plot(model)
plot.igraph(ruleg, vertex.label = V(ruleg)$name,
vertex.label.cex = 1.2,
vertex.label.color = 'black',
vertex.size = 20,
vertex.color = 'pink',
vertex.frame.color = 'red')
install.packages("igraph")
plot(model)
summary(model)
model <- C5.0( 생존여부 ~ ., data = train_data)
View(test_data)
library(extrafont)
font_import()
View(model)
model <- NULL
library(C50)
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
plot.igraph(ruleg, vertex.label = V(ruleg)$name,
vertex.label.cex = 1.2,
vertex.label.color = 'black',
vertex.size = 20,
vertex.color = 'pink',
vertex.frame.color = 'red')
model <- C5.0( 생존여부 ~ . , data = train_data)
summary(model)
plot(model)
par(family="AppleGothic")
plot(model)
par(family="ArialUnicodeMS")
plot(model)
plot(model)
par(family = "AppleGothic")
model <- NULL
model <- C5.0( 생존여부 ~ . , data = train_data)
summary(model)
library(C50)
library(extrafont)
font_import()
par(family="AppleGothic")
model <- C5.0( 생존여부 ~ . , data = train_data)
summary(model)
plot(model)
results <- predict(object=model, newdata = test_data)
results
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
install.packages("extrafont")
library(extrafont)
font_import()
model <- C5.0( 생존여부 ~ . , data = train_data)
library(C50)
model <- NULL
model <- C5.0( 생존여부 ~ . , data = train_data)
summary(model)
gender <- c("F", "F", "M")
par(family="NanumGothic")
plot(model)
par(family="NanumGothic")
par(family="NanumGothic")
plot(model)
par(family="AppleGothic")
plot(model)
iris
str(iris)
nrow(iris)
set.seed(3598)
idx <- sample(1:nrow(iris), size = nrow(iris)*8)
idx
idx <- sample(1:nrow(iris), size = nrow(iris)*0.8)
idx
train_data <- iris[idx,]
train_data
test_data <- iris[-idx,]
test_data
c5_options <- C5.0Control(noGlobalPruning = T, CF = 1)
model1 <- C5.0(Species, data = train_data, control= c5_options)
suammary(model1)
plot(model1)
c5_options <- C5.0Control(noGlobalPruning = T, CF = 1)
model1 <- C5.0(Species ~ ., data = train_data, control= c5_options)
suammary(model1)
summary(model1)
plot(model1)
c5_options <- C5.0Control(noGlobalPruning = T, CF = 0.25)
model2 <- C5.0(Species ~ ., data = train_data, control= c5_options)
summary(model2)
plot(model2)
results <- predict(object = model1, newdata = test_data)
results
table(results, test_data$Species)
str(iris)
