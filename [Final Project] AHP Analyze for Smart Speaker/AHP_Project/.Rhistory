Install.packages("ahp")
install.packages("ahp")
library(ahp)
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
install.packages("extrafont")
library(extrafont)
font_import()
par(family="NanumGothic")
par(family="AppleGothic")
y
font_import()
library(ahp)
ahp_data <- Load(file.choose())
ahp_data <- Load(file.choose())
ahp_data <- Load(file.choose())
ahp_data <- Load(file.choose(), encoding = "UTF-8")
ahp_data <- Load(file.choose(), fileEncoding = "UTF-8")
ahp_data <- Load(file.choose(), fileEncoding = "utf8")
ahp_data <- Load(file.choose())
library(ahp)
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
install.packages("extrafont")
library(extrafont)
font_import()
ahp_data <- Load(file.choose())
ahp_data <- Load(file.choose())
ahp_data <- Load(file.choose())
ahp_data <- Load(file.choose())
ahp_data <- Load(file.choose())
ahp_data
install.packages("igraph")
Visualize(ahp_data,
criteriaNodeStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"),
alternativeNodeStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"))
Calculate(ahp_data)
library(ahp)
Visualize(ahp_data,
criteriaNodeStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"),
alternativeNodeStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"))
library(igraph)
library(ahp)
library(extrafont)
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
library(igraph)
library(ahp)
ahp_data
Visualize(ahp_data,
criteriaNodeStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"),
alternativeNodeStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"))
Visualize(ahp_data,
criteriaNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"),
alternativeNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"))
Visualize(ahp_data,
criteriaNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "yellow",
fcontrol ="black"),
alternativeNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "green",
fcontrol ="black"))
# 계층 모형 출력
Visualize(ahp_data,
criteriaNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "black",
fcontrol ="black"),
alternativeNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "green",
fcontrol ="black"))
# 계층 모형 출력
Visualize(ahp_data,
criteriaNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "black",
fcontrol ="black"),
alternativeNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "brown",
fcontrol ="black"))
Visualize(ahp_data,
criteriaNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "black",
fcontrol ="black"),
alternativeNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "brown",
fcontrol ="black"))
Sys.setlocale("LC_ALL", "ko_KR.UTF-8")
options(encoding = 'UTF-8')
Sys.setenv(LANG = "ko_KR.UTF-8")
localeToCharset()
library(igraph)
library(ahp)
library(extrafont)
ahp_data <- Load(file.choose())
Visualize(ahp_data,
criteriaNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "black",
fcontrol ="black"),
alternativeNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "brown",
fcontrol ="black"))
Calculate(ahp_data)
Analyze(ahp_data)
ahp_data <- NULL
ahp_data <- Load(file.choose())
Calculate(ahp_data)
AnalyzeTable(ahp_data)
ahp_data <-NULL
ahp_data <- Load(file.choose())
Calculate(ahp_data)
AnalyzeTable(ahp_data)
ahp_data <- NULL
ahp_data <- Load(file.choose())
Calculate(ahp_data)
AnalyzeTable(ahp_data)
ahp_data <- NULL
ahp_data <- Load(file.choose())
Visualize(ahp_data,
criteriaNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "black",
fcontrol ="black"),
alternativeNodesStyle = list(style ="filled,rounded",
shape = "box",
color = "black",
fillcolor = "brown",
fcontrol ="black"))
Calculate(ahp_data)
# 우선 순위 일관성 출력
Analyze(ahp_data)
# 우선 순위 일관성 표 출력
AnalyzeTable(ahp_data)
Calculate(ahp_data)
library(ahp)
Calculate(ahp_data)
Analyze(ahp_data)
AnalyzeTable(ahp_data)
